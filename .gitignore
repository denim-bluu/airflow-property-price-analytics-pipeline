# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
data/output/.part-00000-1c48455a-95fe-4724-9a9a-17c165216bea-c000.snappy.parquet.crc
data/output/.part-00000-165c06ed-3c1c-4636-ac23-44b73b656936-c000.snappy.parquet.crc
data/output/.part-00000-6468bd28-d39d-412a-962f-0d456fd84af3-c000.snappy.parquet.crc
data/output/.part-00001-99b1d69b-790b-4a27-b497-10b1790da239-c000.snappy.parquet.crc
data/output/.part-00002-134444df-4333-490f-b685-d09747fd5a54-c000.snappy.parquet.crc
data/output/.part-00003-20480589-4ec5-4bb6-83fe-b177a4f7a1e4-c000.snappy.parquet.crc
data/output/.part-00004-0565141b-245b-470d-8be7-1ff4bf59c922-c000.snappy.parquet.crc
data/output/.part-00005-f35f69bd-d150-4310-8d06-dd9344966e34-c000.snappy.parquet.crc
data/output/.part-00006-5ae28723-fc4d-44a3-89c5-2e06408128b8-c000.snappy.parquet.crc
data/output/.part-00007-e8c94b05-9932-45fb-8909-04626c207f89-c000.snappy.parquet.crc
data/output/.part-00008-0951ded9-6390-4496-ab3a-1c15e507d6f2-c000.snappy.parquet.crc
data/output/.part-00009-75ec2f1f-da51-4b08-98bb-8f11a3d91213-c000.snappy.parquet.crc
data/output/.part-00010-5f3a3bcd-2763-4998-adf4-e2746f847e5f-c000.snappy.parquet.crc
data/output/.part-00011-f0cc8bbd-d4d5-4079-b664-a3890ac54c4d-c000.snappy.parquet.crc
data/output/.part-00012-2ecdc73e-5a52-46ad-9670-7fe644c05a3a-c000.snappy.parquet.crc
data/output/.part-00013-89a7c08f-796e-46cc-8778-e02e6e46c9b0-c000.snappy.parquet.crc
data/output/.part-00014-7462a837-7277-4502-b0f2-2d1b2afaed92-c000.snappy.parquet.crc
data/output/.part-00015-fd8a5291-7eb8-4b00-930a-7f5f8e3a293b-c000.snappy.parquet.crc
data/output/part-00000-1c48455a-95fe-4724-9a9a-17c165216bea-c000.snappy.parquet
data/output/part-00000-165c06ed-3c1c-4636-ac23-44b73b656936-c000.snappy.parquet
data/output/part-00000-6468bd28-d39d-412a-962f-0d456fd84af3-c000.snappy.parquet
data/output/part-00001-99b1d69b-790b-4a27-b497-10b1790da239-c000.snappy.parquet
data/output/part-00002-134444df-4333-490f-b685-d09747fd5a54-c000.snappy.parquet
data/output/part-00003-20480589-4ec5-4bb6-83fe-b177a4f7a1e4-c000.snappy.parquet
data/output/part-00004-0565141b-245b-470d-8be7-1ff4bf59c922-c000.snappy.parquet
data/output/part-00005-f35f69bd-d150-4310-8d06-dd9344966e34-c000.snappy.parquet
data/output/part-00006-5ae28723-fc4d-44a3-89c5-2e06408128b8-c000.snappy.parquet
data/output/part-00007-e8c94b05-9932-45fb-8909-04626c207f89-c000.snappy.parquet
data/output/part-00008-0951ded9-6390-4496-ab3a-1c15e507d6f2-c000.snappy.parquet
data/output/part-00009-75ec2f1f-da51-4b08-98bb-8f11a3d91213-c000.snappy.parquet
data/output/part-00010-5f3a3bcd-2763-4998-adf4-e2746f847e5f-c000.snappy.parquet
data/output/part-00011-f0cc8bbd-d4d5-4079-b664-a3890ac54c4d-c000.snappy.parquet
data/output/part-00012-2ecdc73e-5a52-46ad-9670-7fe644c05a3a-c000.snappy.parquet
data/output/part-00013-89a7c08f-796e-46cc-8778-e02e6e46c9b0-c000.snappy.parquet
data/output/part-00014-7462a837-7277-4502-b0f2-2d1b2afaed92-c000.snappy.parquet
data/output/part-00015-fd8a5291-7eb8-4b00-930a-7f5f8e3a293b-c000.snappy.parquet
data/output/_delta_log/.00000000000000000000.json.crc
data/output/_delta_log/.00000000000000000001.json.crc
data/output/_delta_log/.00000000000000000002.json.crc
data/output/_delta_log/00000000000000000000.json
data/output/_delta_log/00000000000000000001.json
data/output/_delta_log/00000000000000000002.json
HousePriceTracker.pem
HousePriceTracker.pem:Zone.Identifier
.python-version
logs/scheduler/latest
airflow-data/creds/s3
.python-version
k8s/ingestion_spec.json
k8s/k8s_minikube.yaml
